Grammar

    0 $accept: S $end

    1 S: program

    2 program: HASH INCLUDE '<' libraries '>' program
    3        | HASH INCLUDE HEADER_LITERAL program
    4        | translation_unit

    5 translation_unit: ext_dec
    6                 | translation_unit ext_dec

    7 ext_dec: declaration
    8        | function_definition

    9 libraries: STDIO
   10          | STDLIB
   11          | MATH
   12          | STRING
   13          | TIME

   14 compound_statement: '{' '}'
   15                   | '{' block_item_list '}'

   16 block_item_list: block_item
   17                | block_item_list block_item

   18 block_item: declaration
   19           | statement
   20           | function_call ';'
   21           | RETURN expression_statement
   22           | printstat ';'

   23 printstat: PRINT '(' STRING_LITERAL ')'
   24          | PRINT '(' STRING_LITERAL ',' expression ')'

   25 declaration: type_specifier init_declarator_list ';'

   26 statement: compound_statement
   27          | expression_statement
   28          | iteration_statement
   29          | if_statement
   30          | else_statement

   31 iteration_statement: FOR '(' expression_statement expression_statement ')' statement
   32                    | FOR '(' expression_statement expression_statement expression ')' statement
   33                    | FOR '(' declaration expression_statement ')' statement
   34                    | FOR '(' declaration expression_statement expression ')' statement

   35 if_statement: IF '(' relational_expression ')' statement

   36 else_statement: ELSE statement

   37 type_specifier: VOID
   38               | CHAR
   39               | INT
   40               | FLOAT

   41 init_declarator_list: init_declarator
   42                     | init_declarator_list ',' init_declarator

   43 init_declarator: IDENTIFIER '=' assignment_expression
   44                | IDENTIFIER

   45 assignment_expression: equality_expression

   46 $@1: %empty

   47 assignment_expression: unary_expression $@1 assignment_operator assignment_expression

   48 assignment_operator: '='
   49                    | ADD_ASSIGN
   50                    | SUB_ASSIGN
   51                    | MUL_ASSIGN
   52                    | DIV_ASSIGN
   53                    | MOD_ASSIGN

   54 expression_statement: ';'
   55                     | expression ';'

   56 expression: assignment_expression
   57           | expression ',' assignment_expression

   58 primary_expression: IDENTIFIER
   59                   | INTEGER_LITERAL
   60                   | FLOAT_LITERAL
   61                   | CHARACTER_LITERAL
   62                   | '(' expression ')'

   63 postfix_expression: primary_expression
   64                   | postfix_expression INC_OPR
   65                   | postfix_expression DEC_OPR

   66 unary_expression: postfix_expression
   67                 | unary_operator unary_expression

   68 unary_operator: '+'
   69               | '-'
   70               | '!'
   71               | '~'
   72               | INC_OPR
   73               | DEC_OPR

   74 equality_expression: relational_expression
   75                    | equality_expression EQ_OP relational_expression
   76                    | equality_expression NE_OP relational_expression

   77 relational_expression: additive_expression
   78                      | relational_expression '<' additive_expression
   79                      | relational_expression '>' additive_expression
   80                      | relational_expression LE_OP additive_expression
   81                      | relational_expression GE_OP additive_expression

   82 additive_expression: multiplicative_expression
   83                    | additive_expression '+' multiplicative_expression
   84                    | additive_expression '-' multiplicative_expression

   85 multiplicative_expression: unary_expression
   86                          | multiplicative_expression '*' unary_expression
   87                          | multiplicative_expression '/' unary_expression
   88                          | multiplicative_expression '%' unary_expression

   89 function_definition: type_specifier declarator compound_statement
   90                    | declarator compound_statement

   91 function_call: declarator '(' identifier_list ')'
   92              | declarator '(' ')'

   93 declarator: IDENTIFIER
   94           | declarator '(' parameter_list ')'
   95           | declarator '(' identifier_list ')'
   96           | declarator '(' ')'

   97 parameter_list: parameter_declaration
   98               | parameter_list ',' parameter_declaration

   99 parameter_declaration: type_specifier IDENTIFIER
  100                      | type_specifier

  101 identifier_list: IDENTIFIER
  102                | identifier_list ',' IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 70
    '%' (37) 88
    '(' (40) 23 24 31 32 33 34 35 62 91 92 94 95 96
    ')' (41) 23 24 31 32 33 34 35 62 91 92 94 95 96
    '*' (42) 86
    '+' (43) 68 83
    ',' (44) 24 42 57 98 102
    '-' (45) 69 84
    '/' (47) 87
    ';' (59) 20 22 25 54 55
    '<' (60) 2 78
    '=' (61) 43 48
    '>' (62) 2 79
    '{' (123) 14 15
    '}' (125) 14 15
    '~' (126) 71
    error (256)
    HASH (258) 2 3
    INCLUDE (259) 2 3
    STDIO (260) 9
    STDLIB (261) 10
    MATH (262) 11
    STRING (263) 12
    TIME (264) 13
    STRING_LITERAL (265) 23 24
    HEADER_LITERAL (266) 3
    PRINT (267) 23 24
    RETURN (268) 21
    INTEGER_LITERAL <ival> (269) 59
    CHARACTER_LITERAL <cval> (270) 61
    FLOAT_LITERAL <fval> (271) 60
    IDENTIFIER <ptr> (272) 43 44 58 93 99 101 102
    INC_OPR (273) 64 72
    DEC_OPR (274) 65 73
    LE_OP (275) 80
    GE_OP (276) 81
    EQ_OP (277) 75
    NE_OP (278) 76
    MUL_ASSIGN (279) 51
    DIV_ASSIGN (280) 52
    MOD_ASSIGN (281) 53
    ADD_ASSIGN (282) 49
    SUB_ASSIGN (283) 50
    CHAR <ival> (284) 38
    INT <ival> (285) 39
    FLOAT <ival> (286) 40
    VOID <ival> (287) 37
    FOR (288) 31 32 33 34
    IF (289) 35
    ELSE (290) 36


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    S (53)
        on left: 1
        on right: 0
    program (54)
        on left: 2 3 4
        on right: 1 2 3
    translation_unit (55)
        on left: 5 6
        on right: 4 6
    ext_dec (56)
        on left: 7 8
        on right: 5 6
    libraries (57)
        on left: 9 10 11 12 13
        on right: 2
    compound_statement (58)
        on left: 14 15
        on right: 26 89 90
    block_item_list (59)
        on left: 16 17
        on right: 15 17
    block_item (60)
        on left: 18 19 20 21 22
        on right: 16 17
    printstat (61)
        on left: 23 24
        on right: 22
    declaration (62)
        on left: 25
        on right: 7 18 33 34
    statement (63)
        on left: 26 27 28 29 30
        on right: 19 31 32 33 34 35 36
    iteration_statement (64)
        on left: 31 32 33 34
        on right: 28
    if_statement (65)
        on left: 35
        on right: 29
    else_statement (66)
        on left: 36
        on right: 30
    type_specifier (67)
        on left: 37 38 39 40
        on right: 25 89 99 100
    init_declarator_list (68)
        on left: 41 42
        on right: 25 42
    init_declarator (69)
        on left: 43 44
        on right: 41 42
    assignment_expression <fval> (70)
        on left: 45 47
        on right: 43 47 56 57
    $@1 (71)
        on left: 46
        on right: 47
    assignment_operator <fval> (72)
        on left: 48 49 50 51 52 53
        on right: 47
    expression_statement <fval> (73)
        on left: 54 55
        on right: 21 27 31 32 33 34
    expression <fval> (74)
        on left: 56 57
        on right: 24 32 34 55 57 62
    primary_expression <fval> (75)
        on left: 58 59 60 61 62
        on right: 63
    postfix_expression <fval> (76)
        on left: 63 64 65
        on right: 64 65 66
    unary_expression <fval> (77)
        on left: 66 67
        on right: 47 67 85 86 87 88
    unary_operator <fval> (78)
        on left: 68 69 70 71 72 73
        on right: 67
    equality_expression <fval> (79)
        on left: 74 75 76
        on right: 45 75 76
    relational_expression <fval> (80)
        on left: 77 78 79 80 81
        on right: 35 74 75 76 78 79 80 81
    additive_expression <fval> (81)
        on left: 82 83 84
        on right: 77 78 79 80 81 83 84
    multiplicative_expression <fval> (82)
        on left: 85 86 87 88
        on right: 82 83 84 86 87 88
    function_definition (83)
        on left: 89 90
        on right: 8
    function_call (84)
        on left: 91 92
        on right: 20
    declarator (85)
        on left: 93 94 95 96
        on right: 89 90 91 92 94 95 96
    parameter_list (86)
        on left: 97 98
        on right: 94 98
    parameter_declaration (87)
        on left: 99 100
        on right: 97 98
    identifier_list (88)
        on left: 101 102
        on right: 91 95 102


State 0

    0 $accept: . S $end

    HASH        shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    S                    go to state 7
    program              go to state 8
    translation_unit     go to state 9
    ext_dec              go to state 10
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 1

    2 program: HASH . INCLUDE '<' libraries '>' program
    3        | HASH . INCLUDE HEADER_LITERAL program

    INCLUDE  shift, and go to state 15


State 2

   93 declarator: IDENTIFIER .

    $default  reduce using rule 93 (declarator)


State 3

   38 type_specifier: CHAR .

    $default  reduce using rule 38 (type_specifier)


State 4

   39 type_specifier: INT .

    $default  reduce using rule 39 (type_specifier)


State 5

   40 type_specifier: FLOAT .

    $default  reduce using rule 40 (type_specifier)


State 6

   37 type_specifier: VOID .

    $default  reduce using rule 37 (type_specifier)


State 7

    0 $accept: S . $end

    $end  shift, and go to state 16


State 8

    1 S: program .

    $default  reduce using rule 1 (S)


State 9

    4 program: translation_unit .
    6 translation_unit: translation_unit . ext_dec

    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 4 (program)

    ext_dec              go to state 17
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 10

    5 translation_unit: ext_dec .

    $default  reduce using rule 5 (translation_unit)


State 11

    7 ext_dec: declaration .

    $default  reduce using rule 7 (ext_dec)


State 12

   25 declaration: type_specifier . init_declarator_list ';'
   89 function_definition: type_specifier . declarator compound_statement

    IDENTIFIER  shift, and go to state 18

    init_declarator_list  go to state 19
    init_declarator       go to state 20
    declarator            go to state 21


State 13

    8 ext_dec: function_definition .

    $default  reduce using rule 8 (ext_dec)


State 14

   90 function_definition: declarator . compound_statement
   94 declarator: declarator . '(' parameter_list ')'
   95           | declarator . '(' identifier_list ')'
   96           | declarator . '(' ')'

    '{'  shift, and go to state 22
    '('  shift, and go to state 23

    compound_statement  go to state 24


State 15

    2 program: HASH INCLUDE . '<' libraries '>' program
    3        | HASH INCLUDE . HEADER_LITERAL program

    HEADER_LITERAL  shift, and go to state 25
    '<'             shift, and go to state 26


State 16

    0 $accept: S $end .

    $default  accept


State 17

    6 translation_unit: translation_unit ext_dec .

    $default  reduce using rule 6 (translation_unit)


State 18

   43 init_declarator: IDENTIFIER . '=' assignment_expression
   44                | IDENTIFIER .
   93 declarator: IDENTIFIER .

    '='  shift, and go to state 27

    '{'       reduce using rule 93 (declarator)
    '('       reduce using rule 93 (declarator)
    $default  reduce using rule 44 (init_declarator)


State 19

   25 declaration: type_specifier init_declarator_list . ';'
   42 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 28
    ','  shift, and go to state 29


State 20

   41 init_declarator_list: init_declarator .

    $default  reduce using rule 41 (init_declarator_list)


State 21

   89 function_definition: type_specifier declarator . compound_statement
   94 declarator: declarator . '(' parameter_list ')'
   95           | declarator . '(' identifier_list ')'
   96           | declarator . '(' ')'

    '{'  shift, and go to state 22
    '('  shift, and go to state 23

    compound_statement  go to state 30


State 22

   14 compound_statement: '{' . '}'
   15                   | '{' . block_item_list '}'

    PRINT              shift, and go to state 31
    RETURN             shift, and go to state 32
    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 38
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    CHAR               shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    VOID               shift, and go to state 6
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    '}'                shift, and go to state 44
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    block_item_list            go to state 50
    block_item                 go to state 51
    printstat                  go to state 52
    declaration                go to state 53
    statement                  go to state 54
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    type_specifier             go to state 58
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69
    function_call              go to state 70
    declarator                 go to state 71


State 23

   94 declarator: declarator '(' . parameter_list ')'
   95           | declarator '(' . identifier_list ')'
   96           | declarator '(' . ')'

    IDENTIFIER  shift, and go to state 72
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6
    ')'         shift, and go to state 73

    type_specifier         go to state 74
    parameter_list         go to state 75
    parameter_declaration  go to state 76
    identifier_list        go to state 77


State 24

   90 function_definition: declarator compound_statement .

    $default  reduce using rule 90 (function_definition)


State 25

    3 program: HASH INCLUDE HEADER_LITERAL . program

    HASH        shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    program              go to state 78
    translation_unit     go to state 9
    ext_dec              go to state 10
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 26

    2 program: HASH INCLUDE '<' . libraries '>' program

    STDIO   shift, and go to state 79
    STDLIB  shift, and go to state 80
    MATH    shift, and go to state 81
    STRING  shift, and go to state 82
    TIME    shift, and go to state 83

    libraries  go to state 84


State 27

   43 init_declarator: IDENTIFIER '=' . assignment_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 86
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 28

   25 declaration: type_specifier init_declarator_list ';' .

    $default  reduce using rule 25 (declaration)


State 29

   42 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 87

    init_declarator  go to state 88


State 30

   89 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 89 (function_definition)


State 31

   23 printstat: PRINT . '(' STRING_LITERAL ')'
   24          | PRINT . '(' STRING_LITERAL ',' expression ')'

    '('  shift, and go to state 89


State 32

   21 block_item: RETURN . expression_statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 59
    expression_statement       go to state 90
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 33

   68 unary_operator: '+' .

    $default  reduce using rule 68 (unary_operator)


State 34

   69 unary_operator: '-' .

    $default  reduce using rule 69 (unary_operator)


State 35

   59 primary_expression: INTEGER_LITERAL .

    $default  reduce using rule 59 (primary_expression)


State 36

   61 primary_expression: CHARACTER_LITERAL .

    $default  reduce using rule 61 (primary_expression)


State 37

   60 primary_expression: FLOAT_LITERAL .

    $default  reduce using rule 60 (primary_expression)


State 38

   58 primary_expression: IDENTIFIER .
   93 declarator: IDENTIFIER .

    '('       reduce using rule 93 (declarator)
    $default  reduce using rule 58 (primary_expression)


State 39

   72 unary_operator: INC_OPR .

    $default  reduce using rule 72 (unary_operator)


State 40

   73 unary_operator: DEC_OPR .

    $default  reduce using rule 73 (unary_operator)


State 41

   31 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
   32                    | FOR . '(' expression_statement expression_statement expression ')' statement
   33                    | FOR . '(' declaration expression_statement ')' statement
   34                    | FOR . '(' declaration expression_statement expression ')' statement

    '('  shift, and go to state 91


State 42

   35 if_statement: IF . '(' relational_expression ')' statement

    '('  shift, and go to state 92


State 43

   36 else_statement: ELSE . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 93
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 44

   14 compound_statement: '{' '}' .

    $default  reduce using rule 14 (compound_statement)


State 45

   54 expression_statement: ';' .

    $default  reduce using rule 54 (expression_statement)


State 46

   62 primary_expression: '(' . expression ')'

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 59
    expression                 go to state 94
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 47

   70 unary_operator: '!' .

    $default  reduce using rule 70 (unary_operator)


State 48

   71 unary_operator: '~' .

    $default  reduce using rule 71 (unary_operator)


State 49

   26 statement: compound_statement .

    $default  reduce using rule 26 (statement)


State 50

   15 compound_statement: '{' block_item_list . '}'
   17 block_item_list: block_item_list . block_item

    PRINT              shift, and go to state 31
    RETURN             shift, and go to state 32
    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 38
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    CHAR               shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    VOID               shift, and go to state 6
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    '}'                shift, and go to state 95
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    block_item                 go to state 96
    printstat                  go to state 52
    declaration                go to state 53
    statement                  go to state 54
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    type_specifier             go to state 58
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69
    function_call              go to state 70
    declarator                 go to state 71


State 51

   16 block_item_list: block_item .

    $default  reduce using rule 16 (block_item_list)


State 52

   22 block_item: printstat . ';'

    ';'  shift, and go to state 97


State 53

   18 block_item: declaration .

    $default  reduce using rule 18 (block_item)


State 54

   19 block_item: statement .

    $default  reduce using rule 19 (block_item)


State 55

   28 statement: iteration_statement .

    $default  reduce using rule 28 (statement)


State 56

   29 statement: if_statement .

    $default  reduce using rule 29 (statement)


State 57

   30 statement: else_statement .

    $default  reduce using rule 30 (statement)


State 58

   25 declaration: type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 87

    init_declarator_list  go to state 19
    init_declarator       go to state 20


State 59

   56 expression: assignment_expression .

    $default  reduce using rule 56 (expression)


State 60

   27 statement: expression_statement .

    $default  reduce using rule 27 (statement)


State 61

   55 expression_statement: expression . ';'
   57 expression: expression . ',' assignment_expression

    ';'  shift, and go to state 98
    ','  shift, and go to state 99


State 62

   63 postfix_expression: primary_expression .

    $default  reduce using rule 63 (postfix_expression)


State 63

   64 postfix_expression: postfix_expression . INC_OPR
   65                   | postfix_expression . DEC_OPR
   66 unary_expression: postfix_expression .

    INC_OPR  shift, and go to state 100
    DEC_OPR  shift, and go to state 101

    $default  reduce using rule 66 (unary_expression)


State 64

   47 assignment_expression: unary_expression . $@1 assignment_operator assignment_expression
   85 multiplicative_expression: unary_expression .

    '='         reduce using rule 46 ($@1)
    MUL_ASSIGN  reduce using rule 46 ($@1)
    DIV_ASSIGN  reduce using rule 46 ($@1)
    MOD_ASSIGN  reduce using rule 46 ($@1)
    ADD_ASSIGN  reduce using rule 46 ($@1)
    SUB_ASSIGN  reduce using rule 46 ($@1)
    $default    reduce using rule 85 (multiplicative_expression)

    $@1  go to state 102


State 65

   67 unary_expression: unary_operator . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 103
    unary_operator      go to state 65


State 66

   45 assignment_expression: equality_expression .
   75 equality_expression: equality_expression . EQ_OP relational_expression
   76                    | equality_expression . NE_OP relational_expression

    EQ_OP  shift, and go to state 104
    NE_OP  shift, and go to state 105

    $default  reduce using rule 45 (assignment_expression)


State 67

   74 equality_expression: relational_expression .
   78 relational_expression: relational_expression . '<' additive_expression
   79                      | relational_expression . '>' additive_expression
   80                      | relational_expression . LE_OP additive_expression
   81                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 106
    GE_OP  shift, and go to state 107
    '<'    shift, and go to state 108
    '>'    shift, and go to state 109

    $default  reduce using rule 74 (equality_expression)


State 68

   77 relational_expression: additive_expression .
   83 additive_expression: additive_expression . '+' multiplicative_expression
   84                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 77 (relational_expression)


State 69

   82 additive_expression: multiplicative_expression .
   86 multiplicative_expression: multiplicative_expression . '*' unary_expression
   87                          | multiplicative_expression . '/' unary_expression
   88                          | multiplicative_expression . '%' unary_expression

    '/'  shift, and go to state 112
    '*'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 82 (additive_expression)


State 70

   20 block_item: function_call . ';'

    ';'  shift, and go to state 115


State 71

   91 function_call: declarator . '(' identifier_list ')'
   92              | declarator . '(' ')'
   94 declarator: declarator . '(' parameter_list ')'
   95           | declarator . '(' identifier_list ')'
   96           | declarator . '(' ')'

    '('  shift, and go to state 116


State 72

  101 identifier_list: IDENTIFIER .

    $default  reduce using rule 101 (identifier_list)


State 73

   96 declarator: declarator '(' ')' .

    $default  reduce using rule 96 (declarator)


State 74

   99 parameter_declaration: type_specifier . IDENTIFIER
  100                      | type_specifier .

    IDENTIFIER  shift, and go to state 117

    $default  reduce using rule 100 (parameter_declaration)


State 75

   94 declarator: declarator '(' parameter_list . ')'
   98 parameter_list: parameter_list . ',' parameter_declaration

    ')'  shift, and go to state 118
    ','  shift, and go to state 119


State 76

   97 parameter_list: parameter_declaration .

    $default  reduce using rule 97 (parameter_list)


State 77

   95 declarator: declarator '(' identifier_list . ')'
  102 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 120
    ','  shift, and go to state 121


State 78

    3 program: HASH INCLUDE HEADER_LITERAL program .

    $default  reduce using rule 3 (program)


State 79

    9 libraries: STDIO .

    $default  reduce using rule 9 (libraries)


State 80

   10 libraries: STDLIB .

    $default  reduce using rule 10 (libraries)


State 81

   11 libraries: MATH .

    $default  reduce using rule 11 (libraries)


State 82

   12 libraries: STRING .

    $default  reduce using rule 12 (libraries)


State 83

   13 libraries: TIME .

    $default  reduce using rule 13 (libraries)


State 84

    2 program: HASH INCLUDE '<' libraries . '>' program

    '>'  shift, and go to state 122


State 85

   58 primary_expression: IDENTIFIER .

    $default  reduce using rule 58 (primary_expression)


State 86

   43 init_declarator: IDENTIFIER '=' assignment_expression .

    $default  reduce using rule 43 (init_declarator)


State 87

   43 init_declarator: IDENTIFIER . '=' assignment_expression
   44                | IDENTIFIER .

    '='  shift, and go to state 27

    $default  reduce using rule 44 (init_declarator)


State 88

   42 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 42 (init_declarator_list)


State 89

   23 printstat: PRINT '(' . STRING_LITERAL ')'
   24          | PRINT '(' . STRING_LITERAL ',' expression ')'

    STRING_LITERAL  shift, and go to state 123


State 90

   21 block_item: RETURN expression_statement .

    $default  reduce using rule 21 (block_item)


State 91

   31 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
   32                    | FOR '(' . expression_statement expression_statement expression ')' statement
   33                    | FOR '(' . declaration expression_statement ')' statement
   34                    | FOR '(' . declaration expression_statement expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    CHAR               shift, and go to state 3
    INT                shift, and go to state 4
    FLOAT              shift, and go to state 5
    VOID               shift, and go to state 6
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    declaration                go to state 124
    type_specifier             go to state 58
    assignment_expression      go to state 59
    expression_statement       go to state 125
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 92

   35 if_statement: IF '(' . relational_expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    relational_expression      go to state 127
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 93

   36 else_statement: ELSE statement .

    $default  reduce using rule 36 (else_statement)


State 94

   57 expression: expression . ',' assignment_expression
   62 primary_expression: '(' expression . ')'

    ')'  shift, and go to state 128
    ','  shift, and go to state 99


State 95

   15 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 15 (compound_statement)


State 96

   17 block_item_list: block_item_list block_item .

    $default  reduce using rule 17 (block_item_list)


State 97

   22 block_item: printstat ';' .

    $default  reduce using rule 22 (block_item)


State 98

   55 expression_statement: expression ';' .

    $default  reduce using rule 55 (expression_statement)


State 99

   57 expression: expression ',' . assignment_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 129
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 100

   64 postfix_expression: postfix_expression INC_OPR .

    $default  reduce using rule 64 (postfix_expression)


State 101

   65 postfix_expression: postfix_expression DEC_OPR .

    $default  reduce using rule 65 (postfix_expression)


State 102

   47 assignment_expression: unary_expression $@1 . assignment_operator assignment_expression

    '='         shift, and go to state 130
    MUL_ASSIGN  shift, and go to state 131
    DIV_ASSIGN  shift, and go to state 132
    MOD_ASSIGN  shift, and go to state 133
    ADD_ASSIGN  shift, and go to state 134
    SUB_ASSIGN  shift, and go to state 135

    assignment_operator  go to state 136


State 103

   67 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 67 (unary_expression)


State 104

   75 equality_expression: equality_expression EQ_OP . relational_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    relational_expression      go to state 137
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 105

   76 equality_expression: equality_expression NE_OP . relational_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    relational_expression      go to state 138
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 106

   80 relational_expression: relational_expression LE_OP . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    additive_expression        go to state 139
    multiplicative_expression  go to state 69


State 107

   81 relational_expression: relational_expression GE_OP . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    additive_expression        go to state 140
    multiplicative_expression  go to state 69


State 108

   78 relational_expression: relational_expression '<' . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    additive_expression        go to state 141
    multiplicative_expression  go to state 69


State 109

   79 relational_expression: relational_expression '>' . additive_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    additive_expression        go to state 142
    multiplicative_expression  go to state 69


State 110

   83 additive_expression: additive_expression '+' . multiplicative_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    multiplicative_expression  go to state 143


State 111

   84 additive_expression: additive_expression '-' . multiplicative_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 126
    unary_operator             go to state 65
    multiplicative_expression  go to state 144


State 112

   87 multiplicative_expression: multiplicative_expression '/' . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 145
    unary_operator      go to state 65


State 113

   86 multiplicative_expression: multiplicative_expression '*' . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 146
    unary_operator      go to state 65


State 114

   88 multiplicative_expression: multiplicative_expression '%' . unary_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    primary_expression  go to state 62
    postfix_expression  go to state 63
    unary_expression    go to state 147
    unary_operator      go to state 65


State 115

   20 block_item: function_call ';' .

    $default  reduce using rule 20 (block_item)


State 116

   91 function_call: declarator '(' . identifier_list ')'
   92              | declarator '(' . ')'
   94 declarator: declarator '(' . parameter_list ')'
   95           | declarator '(' . identifier_list ')'
   96           | declarator '(' . ')'

    IDENTIFIER  shift, and go to state 72
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6
    ')'         shift, and go to state 148

    type_specifier         go to state 74
    parameter_list         go to state 75
    parameter_declaration  go to state 76
    identifier_list        go to state 149


State 117

   99 parameter_declaration: type_specifier IDENTIFIER .

    $default  reduce using rule 99 (parameter_declaration)


State 118

   94 declarator: declarator '(' parameter_list ')' .

    $default  reduce using rule 94 (declarator)


State 119

   98 parameter_list: parameter_list ',' . parameter_declaration

    CHAR   shift, and go to state 3
    INT    shift, and go to state 4
    FLOAT  shift, and go to state 5
    VOID   shift, and go to state 6

    type_specifier         go to state 74
    parameter_declaration  go to state 150


State 120

   95 declarator: declarator '(' identifier_list ')' .

    $default  reduce using rule 95 (declarator)


State 121

  102 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 151


State 122

    2 program: HASH INCLUDE '<' libraries '>' . program

    HASH        shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    CHAR        shift, and go to state 3
    INT         shift, and go to state 4
    FLOAT       shift, and go to state 5
    VOID        shift, and go to state 6

    program              go to state 152
    translation_unit     go to state 9
    ext_dec              go to state 10
    declaration          go to state 11
    type_specifier       go to state 12
    function_definition  go to state 13
    declarator           go to state 14


State 123

   23 printstat: PRINT '(' STRING_LITERAL . ')'
   24          | PRINT '(' STRING_LITERAL . ',' expression ')'

    ')'  shift, and go to state 153
    ','  shift, and go to state 154


State 124

   33 iteration_statement: FOR '(' declaration . expression_statement ')' statement
   34                    | FOR '(' declaration . expression_statement expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 59
    expression_statement       go to state 155
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 125

   31 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
   32                    | FOR '(' expression_statement . expression_statement expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 59
    expression_statement       go to state 156
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 126

   85 multiplicative_expression: unary_expression .

    $default  reduce using rule 85 (multiplicative_expression)


State 127

   35 if_statement: IF '(' relational_expression . ')' statement
   78 relational_expression: relational_expression . '<' additive_expression
   79                      | relational_expression . '>' additive_expression
   80                      | relational_expression . LE_OP additive_expression
   81                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 106
    GE_OP  shift, and go to state 107
    '<'    shift, and go to state 108
    '>'    shift, and go to state 109
    ')'    shift, and go to state 157


State 128

   62 primary_expression: '(' expression ')' .

    $default  reduce using rule 62 (primary_expression)


State 129

   57 expression: expression ',' assignment_expression .

    $default  reduce using rule 57 (expression)


State 130

   48 assignment_operator: '=' .

    $default  reduce using rule 48 (assignment_operator)


State 131

   51 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 51 (assignment_operator)


State 132

   52 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 52 (assignment_operator)


State 133

   53 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 53 (assignment_operator)


State 134

   49 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 49 (assignment_operator)


State 135

   50 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 50 (assignment_operator)


State 136

   47 assignment_expression: unary_expression $@1 assignment_operator . assignment_expression

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 158
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 137

   75 equality_expression: equality_expression EQ_OP relational_expression .
   78 relational_expression: relational_expression . '<' additive_expression
   79                      | relational_expression . '>' additive_expression
   80                      | relational_expression . LE_OP additive_expression
   81                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 106
    GE_OP  shift, and go to state 107
    '<'    shift, and go to state 108
    '>'    shift, and go to state 109

    $default  reduce using rule 75 (equality_expression)


State 138

   76 equality_expression: equality_expression NE_OP relational_expression .
   78 relational_expression: relational_expression . '<' additive_expression
   79                      | relational_expression . '>' additive_expression
   80                      | relational_expression . LE_OP additive_expression
   81                      | relational_expression . GE_OP additive_expression

    LE_OP  shift, and go to state 106
    GE_OP  shift, and go to state 107
    '<'    shift, and go to state 108
    '>'    shift, and go to state 109

    $default  reduce using rule 76 (equality_expression)


State 139

   80 relational_expression: relational_expression LE_OP additive_expression .
   83 additive_expression: additive_expression . '+' multiplicative_expression
   84                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 80 (relational_expression)


State 140

   81 relational_expression: relational_expression GE_OP additive_expression .
   83 additive_expression: additive_expression . '+' multiplicative_expression
   84                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 81 (relational_expression)


State 141

   78 relational_expression: relational_expression '<' additive_expression .
   83 additive_expression: additive_expression . '+' multiplicative_expression
   84                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 78 (relational_expression)


State 142

   79 relational_expression: relational_expression '>' additive_expression .
   83 additive_expression: additive_expression . '+' multiplicative_expression
   84                    | additive_expression . '-' multiplicative_expression

    '+'  shift, and go to state 110
    '-'  shift, and go to state 111

    $default  reduce using rule 79 (relational_expression)


State 143

   83 additive_expression: additive_expression '+' multiplicative_expression .
   86 multiplicative_expression: multiplicative_expression . '*' unary_expression
   87                          | multiplicative_expression . '/' unary_expression
   88                          | multiplicative_expression . '%' unary_expression

    '/'  shift, and go to state 112
    '*'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 83 (additive_expression)


State 144

   84 additive_expression: additive_expression '-' multiplicative_expression .
   86 multiplicative_expression: multiplicative_expression . '*' unary_expression
   87                          | multiplicative_expression . '/' unary_expression
   88                          | multiplicative_expression . '%' unary_expression

    '/'  shift, and go to state 112
    '*'  shift, and go to state 113
    '%'  shift, and go to state 114

    $default  reduce using rule 84 (additive_expression)


State 145

   87 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 87 (multiplicative_expression)


State 146

   86 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 86 (multiplicative_expression)


State 147

   88 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 88 (multiplicative_expression)


State 148

   92 function_call: declarator '(' ')' .
   96 declarator: declarator '(' ')' .

    '('       reduce using rule 96 (declarator)
    $default  reduce using rule 92 (function_call)


State 149

   91 function_call: declarator '(' identifier_list . ')'
   95 declarator: declarator '(' identifier_list . ')'
  102 identifier_list: identifier_list . ',' IDENTIFIER

    ')'  shift, and go to state 159
    ','  shift, and go to state 121


State 150

   98 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 98 (parameter_list)


State 151

  102 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 102 (identifier_list)


State 152

    2 program: HASH INCLUDE '<' libraries '>' program .

    $default  reduce using rule 2 (program)


State 153

   23 printstat: PRINT '(' STRING_LITERAL ')' .

    $default  reduce using rule 23 (printstat)


State 154

   24 printstat: PRINT '(' STRING_LITERAL ',' . expression ')'

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 59
    expression                 go to state 160
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 155

   33 iteration_statement: FOR '(' declaration expression_statement . ')' statement
   34                    | FOR '(' declaration expression_statement . expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    ')'                shift, and go to state 161
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 59
    expression                 go to state 162
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 156

   31 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
   32                    | FOR '(' expression_statement expression_statement . expression ')' statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    '('                shift, and go to state 46
    ')'                shift, and go to state 163
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    assignment_expression      go to state 59
    expression                 go to state 164
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 157

   35 if_statement: IF '(' relational_expression ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 165
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 158

   47 assignment_expression: unary_expression $@1 assignment_operator assignment_expression .

    $default  reduce using rule 47 (assignment_expression)


State 159

   91 function_call: declarator '(' identifier_list ')' .
   95 declarator: declarator '(' identifier_list ')' .

    '('       reduce using rule 95 (declarator)
    $default  reduce using rule 91 (function_call)


State 160

   24 printstat: PRINT '(' STRING_LITERAL ',' expression . ')'
   57 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 166
    ','  shift, and go to state 99


State 161

   33 iteration_statement: FOR '(' declaration expression_statement ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 167
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 162

   34 iteration_statement: FOR '(' declaration expression_statement expression . ')' statement
   57 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 168
    ','  shift, and go to state 99


State 163

   31 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 169
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 164

   32 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement
   57 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 170
    ','  shift, and go to state 99


State 165

   35 if_statement: IF '(' relational_expression ')' statement .

    $default  reduce using rule 35 (if_statement)


State 166

   24 printstat: PRINT '(' STRING_LITERAL ',' expression ')' .

    $default  reduce using rule 24 (printstat)


State 167

   33 iteration_statement: FOR '(' declaration expression_statement ')' statement .

    $default  reduce using rule 33 (iteration_statement)


State 168

   34 iteration_statement: FOR '(' declaration expression_statement expression ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 171
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 169

   31 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 31 (iteration_statement)


State 170

   32 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    '+'                shift, and go to state 33
    '-'                shift, and go to state 34
    INTEGER_LITERAL    shift, and go to state 35
    CHARACTER_LITERAL  shift, and go to state 36
    FLOAT_LITERAL      shift, and go to state 37
    IDENTIFIER         shift, and go to state 85
    INC_OPR            shift, and go to state 39
    DEC_OPR            shift, and go to state 40
    FOR                shift, and go to state 41
    IF                 shift, and go to state 42
    ELSE               shift, and go to state 43
    '{'                shift, and go to state 22
    ';'                shift, and go to state 45
    '('                shift, and go to state 46
    '!'                shift, and go to state 47
    '~'                shift, and go to state 48

    compound_statement         go to state 49
    statement                  go to state 172
    iteration_statement        go to state 55
    if_statement               go to state 56
    else_statement             go to state 57
    assignment_expression      go to state 59
    expression_statement       go to state 60
    expression                 go to state 61
    primary_expression         go to state 62
    postfix_expression         go to state 63
    unary_expression           go to state 64
    unary_operator             go to state 65
    equality_expression        go to state 66
    relational_expression      go to state 67
    additive_expression        go to state 68
    multiplicative_expression  go to state 69


State 171

   34 iteration_statement: FOR '(' declaration expression_statement expression ')' statement .

    $default  reduce using rule 34 (iteration_statement)


State 172

   32 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 32 (iteration_statement)
